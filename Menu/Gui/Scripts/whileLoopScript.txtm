
foreach (Event in PendingEvents) {
    if (Event.Type == CMlEvent::Type::KeyPress && Event.KeyCode == 123)  {
        eXp_tabPressed = True;
    }
}

if(eXp_tabPressed){
    if(showStatus){
        needUpdate = True;
        showStatus = False;
    }
}else{
    if(MouseRightButton && !eXp_mouseRightState) {
        eXp_mouseRightTime = Now;
        eXp_mouseRightState = True;
        toggleSubmenu = False;
    } else if(!MouseRightButton && eXp_mouseRightState) {
        eXp_mouseRightState = False;
        toggleSubmenu = False;
        if((Now - eXp_mouseRightTime) < 500) {
            toggleSubmenu = True;
            showStatus = True;
            needUpdate = True;
            Menu.RelativePosition.X = MouseX-1.0;
            Menu.RelativePosition.Y = MouseY+.5;
            Menu.RelativePosition.Z = 50.0;
        } else {
            needUpdate = True;
            showStatus = False;
        }
    }
}

if (MouseMiddleButton && !eXp_mouseMiddleState) {
	eXp_mouseMiddleTime = Now;
	eXp_mouseMiddleState = True;    
} else if(!MouseMiddleButton && eXp_mouseMiddleState) {
    eXp_mouseMiddleState = False;    
    
	if((Now - eXp_mouseMiddleTime) < 200) {
	    exp_enableHudMove = !exp_enableHudMove;
	    exp_needToCheckPersistentVars = True;
	    }
}

/*
if (IsSpectatorMode) { 	
    toggleSubmenu = False;
}
*/

if (toggleSubmenu) {
	foreach (Event in PendingEvents) {
	    if (Event.Type == CMlEvent::Type::MouseOver && Event.ControlId != "Unassigned")  {			
			if(Page.GetFirstChild("submenu_"^ TextLib::SubText(Event.ControlId,4,1)) != Null ) {                                                                                            
				if (currentButton != Null && currentButton.ControlId != "submenu_"^ TextLib::SubText(Event.ControlId,4,1)) {        
					currentButton.Hide();
				} 
				//log ("hovering: submenu_"^ TextLib::SubText(Event.ControlId,4,1));
				outText = "";					   			
				foreach (idd => dump in eXp_widgetVisible[version]) {		    
				    if (!eXp_widgetVisible[version][idd].existskey(gameMode)) {
					continue;
				    }
					declare status = eXp_widgetVisible[version][idd][gameMode];
					declare Text bool = "0";
					if (status == True) {
        				    	bool = "1";
					    }
					    outText = outText ^ idd ^ ":" ^ gameMode ^ ":" ^ bool ^ "|";					
		    		   
				    }	    
				    // log(outText);
				    widgetStatus.Value = outText;
				    
				currentButton = (Page.GetFirstChild("submenu_"^ TextLib::SubText(Event.ControlId,4,1)) as CMlFrame);
				currentButton.Show();				
			} else {                            
				if (currentButton != Null) {                
					//log ("hiding:" ^ currentButton.ControlId);
					currentButton.Hide();        
					currentButton = Null;
				}
			}                                                  
		} 
	}
}
 

if (MouseLeftButton) {                           
	toggleSubmenu = False;
        needUpdate = True;
        showStatus = False;
}   


if (needUpdate) {
    needUpdate = False;
   
    if (showStatus) {
        Menu.Show();
        //log("Show"^ Now);
        needHidden = True;
        Page.GetClassChildren("menuitem" , Menu , True);
         declare Integer delay = 0;  
        foreach (control in Page.GetClassChildren_Result) { 
        	LibManialink_AnimInsert("<quad scale=\"1\" opacity=\"1\" id=\""^ control.ControlId ^ "\" />", delay,200 ,"EaseInLinear");
        	LibManialink_AnimInsert("<quad scale=\"1\" opacity=\"1\" id=\""^ control.ControlId ^ "_lbl\" />", delay, 200, "EaseInLinear");
                delay += 20;
	}

    } else {
        if (needHidden) {                  
            hideStamp = Now;
            needHidden = False;
            declare Integer delay = 250;  
            Page.GetClassChildren("menuitem" , Menu , True);
            foreach (control in Page.GetClassChildren_Result) { 
            // declare CMlQuad quad  <=> (Page.GetFirstChild(control.ControlId) as CMlQuad);
            //  quad.Opacity = 0.0;
            //  quad.Scale = 0.0;
            //   declare CMlLabel lbl  <=> (Page.GetFirstChild(control.ControlId^"_lbl") as CMlLabel);
            //   lbl.Opacity = 0.0;
            //   lbl.Scale = 0.0;
                LibManialink_AnimInsert("<quad scale=\"0\" opacity=\"0\" id=\""^ control.ControlId ^ "\" />", delay, 200 ,"EaseInLinear");
        	LibManialink_AnimInsert("<quad scale=\"0\" opacity=\"0\" id=\""^ control.ControlId ^ "_lbl\" />", delay, 200, "EaseInLinear");
                delay -= 20;
            }
       
        }
    }
}

if(!toggleSubmenu && Menu.Visible && (Now - hideStamp) > 400) {
    Menu.Hide();
    if (currentButton != Null) {                
        //log ("hiding:" ^ currentButton.ControlId);
        currentButton.Hide();        
        currentButton = Null;
    }
}