if( eXp_tabPressed == True && (Now - eXp_tabTime) > 50) {
    eXp_tabPressed = False;
}

foreach (Event in PendingEvents) {
    if (Event.Type == CMlEvent::Type::KeyPress && Event.KeyCode == 123)  {
        eXp_tabTime = Now;
        eXp_tabPressed = True;
    }

    if (Event.Type == CMlEvent::Type::MouseOver && Event.ControlId == "boundingBox") {
        canToggle = True;
    }

    if (Event.Type == CMlEvent::Type::MouseOut && Event.ControlId == "boundingBox") {
        canToggle = False;
    }
}

if(eXp_tabPressed) {
    toggleSubmenu = False;
    Menu.Hide();
    if(showStatus){
        needUpdate = True;
        showStatus = False;
    }
} else if (canToggle) {
        if(MouseRightButton && !eXp_mouseRightState && !eXp_tabPressed) {
                eXp_mouseRightTime = Now;
                eXp_mouseRightState = True;
                toggleSubmenu = False;
                lastMousePos = <MouseX, MouseY>;
            } else if(!MouseRightButton && eXp_mouseRightState) {
            eXp_mouseRightState = False;
            toggleSubmenu = False;
            if((Now - eXp_mouseRightTime) < 500) {
                    if (lastMousePos.X == MouseX && lastMousePos.Y == MouseY) {
                        toggleSubmenu = True;
                        showStatus = True;
                        needUpdate = True;
                        Menu.RelativePosition.X = MouseX-1.0;
                        Menu.RelativePosition.Y = MouseY+.5;
                        Menu.RelativePosition.Z = 50.0;
                    }

            } else {
                needUpdate = True;
                showStatus = False;
            }
        }
}

if (MouseMiddleButton && !eXp_mouseMiddleState) {
	eXp_mouseMiddleTime = Now;
	eXp_mouseMiddleState = True;
} else if(!MouseMiddleButton && eXp_mouseMiddleState) {
    eXp_mouseMiddleState = False;

	if((Now - eXp_mouseMiddleTime) < 200) {
	    exp_enableHudMove = !exp_enableHudMove;
	    exp_needToCheckPersistentVars = True;
	    }
}

/*
if (IsSpectatorMode) {
    toggleSubmenu = False;
}
*/
if(eXp_tabPressed){
    toggleSubmenu = False;
}

if (toggleSubmenu) {
	foreach (Event in PendingEvents) {
            if (Event.Type == CMlEvent::Type::MouseClick) {
                outText = "";
                foreach (idd => dump in eXp_widgetVisible[version]) {
                    if (!eXp_widgetVisible[version][idd].existskey(gameMode)) {
                        continue;
                    }
                        declare status = eXp_widgetVisible[version][idd][gameMode];
                        declare Text bool = "0";
                        if (status == True) {
                                bool = "1";
                            }
                            outText = outText ^ idd ^ ":" ^ gameMode ^ ":" ^ bool ^ "|";

                    }
                    // log(outText);
                    widgetStatus.Value = outText;
                    declare item = Page.GetFirstChild(Event.ControlId);

                    if (item.DataAttributeExists("action") ) {
                        TriggerPageAction(item.DataAttributeGet("action"));
                        toggleSubmenu = False;
                        needUpdate = True;
                        showStatus = False;
                    }
                }

	    if (Event.Type == CMlEvent::Type::MouseOver && Event.ControlId != "Unassigned")  {
			if(Page.GetFirstChild("submenu_"^ TextLib::SubText(Event.ControlId,4,1)) != Null ) {
				if (currentButton != Null && currentButton.ControlId != "submenu_"^ TextLib::SubText(Event.ControlId,4,1)) {
					currentButton.Hide();
                                        }
				//log ("hovering: submenu_"^ TextLib::SubText(Event.ControlId,4,1));

				currentButton = (Page.GetFirstChild("submenu_"^ TextLib::SubText(Event.ControlId,4,1)) as CMlFrame);
				currentButton.Show();
			} else {
				if (currentButton != Null) {
					//log ("hiding:" ^ currentButton.ControlId);
					currentButton.Hide();
					currentButton = Null;
				}
			}
		}
	}
}

if (needUpdate) {
    needUpdate = False;

    if (showStatus) {
        Menu.Show();
        //log("Show"^ Now);
        needHidden = True;
        Page.GetClassChildren("menuitem" , Menu , True);
        declare Integer delay = 0;
        foreach (control in Page.GetClassChildren_Result) {
        	LibManialink_AnimInsert("<quad opacity=\"0.75\" id=\""^ control.ControlId ^ "\" />", delay,300 ,"EaseInLinear");
        	LibManialink_AnimInsert("<quad opacity=\"1.\" id=\""^ control.ControlId ^ "_lbl\" />", delay, 300, "EaseInLinear");
        	LibManialink_AnimInsert("<quad opacity=\"1.\" id=\""^ control.ControlId ^ "_icon\" />", delay, 300, "EaseInLinear");
                delay += 20;
	}

    } else {
        if (needHidden) {
            hideStamp = Now;
            needHidden = False;
            toggleSubmenu = False;
            declare Integer delay = 0;
            Page.GetClassChildren("menuitem" , Menu , True);
            foreach (control in Page.GetClassChildren_Result) {
                LibManialink_AnimInsert("<quad opacity=\"0\" id=\""^ control.ControlId ^ "\" />", delay, 300 ,"EaseInLinear");
        	LibManialink_AnimInsert("<quad opacity=\"0\" id=\""^ control.ControlId ^ "_lbl\" />", delay, 300, "EaseInLinear");
        	LibManialink_AnimInsert("<quad opacity=\"0\" id=\""^ control.ControlId ^ "_icon\" />", delay, 300, "EaseInLinear");
                delay += 20;
            }

                }
            }
        }

if(!toggleSubmenu && Menu.Visible && (Now - hideStamp) > 300) {
    Menu.Hide();
    if (currentButton != Null) {
        //log ("hiding:" ^ currentButton.ControlId);
        currentButton.Hide();
        currentButton = Null;
    }
}

if (MouseLeftButton || (canToggle == False && MouseRightButton)) {
        needUpdate = True;
        showStatus = False;
}
